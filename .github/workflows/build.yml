name: CI
on:
  push:
    branches:

  pull_request:

      sonar-backend:
        permissions:
          pull-requests: read # allows SonarCloud to decorate PRs with analysis results

        jobs:
          Analysis:
            runs-on: ubuntu-latest

            steps:
              - name: Analyze with SonarCloud

                # You can pin the exact commit or the version.
                # uses: SonarSource/sonarcloud-github-action@v2.2.0
                uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
                env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
                with:
                  # Additional arguments for the SonarScanner CLI
                  args:
                    # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
                    # mandatory
                    -Dsonar.projectKey=sosaidi_AdvancedMD-backend
                    -Dsonar.organization=sosaidi
                    -Dsonar.exclusions=\*\*/\*.java
                    # Comma-separated paths to directories containing main source files.
                    #-Dsonar.sources= # optional, default is project base directory
                    # Comma-separated paths to directories containing test source files.
                    #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
                  # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
                  #-Dsonar.verbose= # optional, default is false
                  # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
                  projectBaseDir: .

      build:
            runs-on: ubuntu-latest

            steps:
              - name: Checkout code
                uses: actions/checkout@v3


              - name: Set up JDK
                uses: actions/setup-java@v2
                with:
                  java-version: '17'   # Specify the version of Java you are using
                  distribution: 'adopt'

              - name: Cache Maven dependencies
                uses: actions/cache@v3
                with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                    ${{ runner.os }}-maven-
      

              - name: Build with Maven
                run: mvn clean install


              - name: Run Unit Tests
                run: mvn test

              - name: Cache Maven dependencies
                uses: actions/cache@v3
                with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                    ${{ runner.os }}-maven-
      

              - name: Semantic Release
                uses: cycjimmy/semantic-release-action@v3
                if: github.ref == 'refs/heads/master'
                env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}